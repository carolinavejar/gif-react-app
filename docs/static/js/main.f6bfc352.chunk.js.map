{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGIF.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","className","onChange","target","getGifs","category","a","axios","get","encodeURI","then","response","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","imgs","console","log","useFetchGIF","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAWT,EACXU,UAAY,cACZC,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,iDCLlBI,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,4DACH,mCADG,SAGbC,IAAMC,IAAN,uDAFU,mCAEV,cAA0EC,UAAUJ,GAApF,cACLK,MAAK,SAACC,GACH,IAAiBC,EAAWD,EAApBC,KAASA,KACjBC,EAAOD,EAAKE,KAAM,SAAAC,GACd,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,WAV1B,gCAcZL,GAdY,2CAAH,sDCAPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,qBAAKjB,UAAY,2DAAjB,SACI,sBAAKA,UAAY,aAAjB,UACI,qBAAKqB,IAAOJ,EAAKK,IAAON,IACxB,sBAAKhB,UAAY,aAAjB,UAA+BgB,EAA/B,aCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHuB,SAAEA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GAAWK,MAAO,SAAAmB,GACvBC,QAAQC,IAAIF,GACRF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAItB,CAACpB,IAGGqB,EDf2BM,CAAY3B,GAAhCc,EAAd,EAAQP,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACA,qBAAIxB,UAAY,oCAAhB,cAAuDI,EAAvD,OACMoB,GAAW,6CAETN,EAAOL,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADGA,EAAIC,WEgBrBiB,EAzBM,WAEjB,MAAoC3C,mBAAS,CAAC,YAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,mCACI,sBAAKY,UAAY,YAAjB,UACI,8CACA,cAAC,EAAD,CAAaZ,cAAkBA,IAC/B,uBAEQS,EAAWgB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CACIA,SAAaA,GACLA,YCfxC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6bfc352.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const  [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=> {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( categories => [ inputValue, ...categories ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value =  { inputValue }\r\n                className = \"input-field\"\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const getGifs = async (category) => {\r\n    const api_key = 'URLjL49KyzdscasPa5146vq3CmpIYQjq';\r\n    let gifs;\r\n    await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=${ api_key }&q=${ encodeURI(category) }&limit=10`)\r\n    .then((response) => {\r\n        const { data : { data } } = response;\r\n        gifs = data.map ( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        });\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce animate__delay-2s\">\r\n            <div className = \"card-image\">\r\n                <img src= { url} alt = {title}></img> \r\n                <div className = \"card-title\">{title} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\r\nimport { useFetchGIF } from './hooks/useFetchGIF';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGIF(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className = \"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p> Loading ...</p>}\r\n            {\r\n                images.map( (img) => \r\n                    <GifGridItem \r\n                        key = { img.id }\r\n                        { ...img }\r\n                    >\r\n\r\n                    </GifGridItem>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGIF = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then ( imgs => {\r\n            console.log(imgs);\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n            })\r\n            \r\n        });\r\n    }, [category])\r\n\r\n\r\n    return state;  \r\n    //  state \r\n    // ========\r\n    // {\r\n    //     data: [],\r\n    //     loading: true\r\n    // }\r\n}\r\n","import React from 'react';\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport { useState } from 'react/cjs/react.development';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Rihanna']);\r\n\r\n    return (\r\n        <>\r\n            <div className = \"container\">\r\n                <h1>GifExpertApp</h1>\r\n                <AddCategory setCategories = { setCategories }></AddCategory>\r\n                <hr></hr>   \r\n                    {\r\n                        categories.map( (category) => \r\n                            <GifGrid \r\n                                category = { category }\r\n                                key = { category }\r\n                            >\r\n                            </GifGrid>\r\n                        )\r\n                    }\r\n            </div>\r\n        </>\r\n       \r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}